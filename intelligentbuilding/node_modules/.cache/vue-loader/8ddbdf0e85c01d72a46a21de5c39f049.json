{"remainingRequest":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\src\\components\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\src\\components\\Home.vue","mtime":1628858297653},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNjb250YWluZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAihBA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <el-tree :data=\"data\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree\" highlight-current\n             :props=\"defaultProps\" @check=\"handleTreeNodeClick\">\n    </el-tree>\n    <div id=\"container\"></div>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three/build/three.module'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nlet scene = null\nlet controls = null\n\nexport default {\n  data () {\n    return {\n      // 树形组件\n      data: [{\n        id: 1,\n        label: '计算机学院',\n        children: [\n          { id: 11, label: '1L', children: [{ id: 101, label: '1L墙体' }, { id: 102, label: '1L桌椅' }] },\n          { id: 12, label: '2L', children: [{ id: 103, label: '2L墙体' }, { id: 104, label: '2L桌椅' }] },\n          { id: 13, label: '3L', children: [{ id: 105, label: '3L墙体' }, { id: 106, label: '3L桌椅' }] },\n          { id: 14, label: '4L', children: [{ id: 107, label: '4L墙体' }, { id: 108, label: '4L桌椅' }] },\n          { id: 15, label: '5L', children: [{ id: 109, label: '5L墙体' }, { id: 110, label: '5L桌椅' }] },\n          { id: 16, label: '6L', children: [{ id: 111, label: '6L墙体' }, { id: 112, label: '6L桌椅' }] }\n        ]\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 场景组件\n      camera: null,\n      renderer: null,\n      mesh: null,\n      clock: null,\n      // 模型组件\n      floor_1: null,\n      floor_2: null,\n      floor_3: null,\n      floor_4: null,\n      floor_5: null,\n      floor_6: null,\n      context_1: null,\n      context_2: null,\n      context_3: null,\n      context_4: null,\n      context_5: null,\n      context_6: null,\n      // 判断加载\n      isLoaded_1: false,\n      isLoaded_11: false,\n      isLoaded_12: false,\n      isLoaded_13: false,\n      isLoaded_14: false,\n      isLoaded_15: false,\n      isLoaded_16: false,\n      isLoaded_101: false,\n      isLoaded_102: false,\n      isLoaded_103: false,\n      isLoaded_104: false,\n      isLoaded_105: false,\n      isLoaded_106: false,\n      isLoaded_107: false,\n      isLoaded_108: false,\n      isLoaded_109: false,\n      isLoaded_110: false,\n      isLoaded_111: false,\n      isLoaded_112: false\n    }\n  },\n  mounted () {\n    this.init()\n    this.animate()\n  },\n  methods: {\n    // 点击树节点事件处理\n    handleTreeNodeClick (data, node, elem) {\n      switch (data.id) {\n        case 1:\n          if (this.isLoaded_1 === true) {\n            this.isLoaded_1 = false\n            scene.remove(this.floor_1)\n            scene.remove(this.floor_2)\n            scene.remove(this.floor_3)\n            scene.remove(this.floor_4)\n            scene.remove(this.floor_5)\n            scene.remove(this.floor_6)\n            scene.remove(this.context_1)\n            scene.remove(this.context_2)\n            scene.remove(this.context_3)\n            scene.remove(this.context_4)\n            scene.remove(this.context_5)\n            scene.remove(this.context_6)\n          } else {\n            this.isLoaded_1 = true\n            scene.add(this.floor_1)\n            scene.add(this.floor_2)\n            scene.add(this.floor_3)\n            scene.add(this.floor_4)\n            scene.add(this.floor_5)\n            scene.add(this.floor_6)\n            scene.add(this.context_1)\n            scene.add(this.context_2)\n            scene.add(this.context_3)\n            scene.add(this.context_4)\n            scene.add(this.context_5)\n            scene.add(this.context_6)\n          }\n          break\n        case 11:\n          if (this.isLoaded_11 === true) {\n            this.isLoaded_11 = false\n            scene.remove(this.floor_1)\n            scene.remove(this.context_1)\n          } else {\n            this.isLoaded_11 = true\n            scene.add(this.floor_1)\n            scene.add(this.context_1)\n          }\n          break\n        case 12:\n          if (this.isLoaded_12 === true) {\n            this.isLoaded_12 = false\n            scene.remove(this.floor_2)\n            scene.remove(this.context_2)\n          } else {\n            this.isLoaded_12 = true\n            scene.add(this.floor_2)\n            scene.add(this.context_2)\n          }\n          break\n        case 13:\n          if (this.isLoaded_13 === true) {\n            this.isLoaded_13 = false\n            scene.remove(this.floor_3)\n            scene.remove(this.context_3)\n          } else {\n            this.isLoaded_13 = true\n            scene.add(this.floor_3)\n            scene.add(this.context_3)\n          }\n          break\n        case 14:\n          if (this.isLoaded_14 === true) {\n            this.isLoaded_14 = false\n            scene.remove(this.floor_4)\n            scene.remove(this.context_4)\n          } else {\n            this.isLoaded_14 = true\n            scene.add(this.floor_4)\n            scene.add(this.context_4)\n          }\n          break\n        case 15:\n          if (this.isLoaded_15 === true) {\n            this.isLoaded_15 = false\n            scene.remove(this.floor_5)\n            scene.remove(this.context_5)\n          } else {\n            this.isLoaded_15 = true\n            scene.add(this.floor_5)\n            scene.add(this.context_5)\n          }\n          break\n        case 16:\n          if (this.isLoaded_16 === true) {\n            this.isLoaded_16 = false\n            scene.remove(this.floor_6)\n            scene.remove(this.context_6)\n          } else {\n            this.isLoaded_16 = true\n            scene.add(this.floor_6)\n            scene.add(this.context_6)\n          }\n          break\n        case 101:\n          if (this.isLoaded_101 === true) {\n            this.isLoaded_101 = false\n            scene.remove(this.floor_1)\n          } else {\n            this.isLoaded_101 = true\n            scene.add(this.floor_1)\n          }\n          break\n        case 102:\n          if (this.isLoaded_102 === true) {\n            this.isLoaded_102 = false\n            scene.remove(this.context_1)\n          } else {\n            this.isLoaded_102 = true\n            scene.add(this.context_1)\n          }\n          break\n        case 103:\n          if (this.isLoaded_103 === true) {\n            this.isLoaded_103 = false\n            scene.remove(this.floor_2)\n          } else {\n            this.isLoaded_103 = true\n            scene.add(this.floor_2)\n          }\n          break\n        case 104:\n          if (this.isLoaded_104 === true) {\n            this.isLoaded_104 = false\n            scene.remove(this.context_2)\n          } else {\n            this.isLoaded_104 = true\n            scene.add(this.context_2)\n          }\n          break\n        case 105:\n          if (this.isLoaded_105 === true) {\n            this.isLoaded_105 = false\n            scene.remove(this.floor_3)\n          } else {\n            this.isLoaded_105 = true\n            scene.add(this.floor_3)\n          }\n          break\n        case 106:\n          if (this.isLoaded_106 === true) {\n            this.isLoaded_106 = false\n            scene.remove(this.context_3)\n          } else {\n            this.isLoaded_106 = true\n            scene.add(this.context_3)\n          }\n          break\n        case 107:\n          if (this.isLoaded_107 === true) {\n            this.isLoaded_107 = false\n            scene.remove(this.floor_4)\n          } else {\n            this.isLoaded_107 = true\n            scene.add(this.floor_4)\n          }\n          break\n        case 108:\n          if (this.isLoaded_108 === true) {\n            this.isLoaded_108 = false\n            scene.remove(this.context_4)\n          } else {\n            this.isLoaded_108 = true\n            scene.add(this.context_4)\n          }\n          break\n        case 109:\n          if (this.isLoaded_109 === true) {\n            this.isLoaded_109 = false\n            scene.remove(this.floor_5)\n          } else {\n            this.isLoaded_109 = true\n            scene.add(this.floor_5)\n          }\n          break\n        case 110:\n          if (this.isLoaded_110 === true) {\n            this.isLoaded_110 = false\n            scene.remove(this.context_5)\n          } else {\n            this.isLoaded_110 = true\n            scene.add(this.context_5)\n          }\n          break\n        case 111:\n          if (this.isLoaded_111 === true) {\n            this.isLoaded_111 = false\n            scene.remove(this.floor_6)\n          } else {\n            this.isLoaded_111 = true\n            scene.add(this.floor_6)\n          }\n          break\n        case 112:\n          if (this.isLoaded_112 === true) {\n            this.isLoaded_112 = false\n            scene.remove(this.context_6)\n          } else {\n            this.isLoaded_112 = true\n            scene.add(this.context_6)\n          }\n          break\n      }\n    },\n    // 初始化\n    init () {\n      // 创建场景对象Scene\n      this.container = document.getElementById('container')\n      this.container.style.height = window.innerHeight + 'px'\n      scene = new THREE.Scene()\n      scene.background = new THREE.Color(0xbfd1e5)\n\n      // 创建渲染器对象\n      this.renderer = new THREE.WebGLRenderer({ antialias: true })\n      this.renderer.setSize(this.container.clientWidth, this.container.clientHeight)\n      this.renderer.setPixelRatio(window.devicePixelRatio)\n      this.container.appendChild(this.renderer.domElement)\n\n      // 相机设置\n      const fov = 45\n      const aspect = 2\n      const near = 0.1\n      const far = 100\n      this.container = document.getElementById('container')\n      this.camera = new THREE.PerspectiveCamera(\n        fov, aspect, near, far\n      )\n      this.camera.position.set(15, 10, 20) // 设置相机位置\n\n      // 光源设置\n      // 点光源\n      let point = new THREE.PointLight(0xffffff)\n      point.position.set(400, 200, 300) // 点光源位置\n      scene.add(point) // 点光源添加到场景中\n      // 环境光\n      let ambient = new THREE.AmbientLight(0x444444)\n      scene.add(ambient)\n\n      this.clock = new THREE.Clock()\n      // onresize 事件会在窗口被调整大小时发生\n      window.onresize = () => {\n        // 重置渲染器输出画布canvas尺寸\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        // 全屏情况下：设置观察范围长宽比aspect为窗口宽高比\n        this.camera.aspect = window.innerWidth / window.innerHeight\n        // 渲染器执行render方法的时候会读取相机对象的投影矩阵属性projectionMatrix\n        // 但是不会每渲染一帧，就通过相机的属性计算投影矩阵(节约计算资源)\n        // 如果相机的一些属性发生了变化，需要执行updateProjectionMatrix ()方法更新相机的投影矩阵\n        this.camera.updateProjectionMatrix()\n      }\n\n      controls = new OrbitControls(this.camera, this.renderer.domElement)\n      controls.target.set(5, 0, -10)\n      controls.update()\n\n      // 模型加载\n      this.objectLoader()\n    },\n    // 动画\n    animate () {\n      requestAnimationFrame(this.animate)\n      this.renderer.render(scene, this.camera)\n    },\n    // 模型加载\n    objectLoader () {\n      this.gltfLoader = new GLTFLoader()\n\n      let url\n      url = '/static/1楼墙体/1楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.floor_1 = new THREE.Group()\n        this.floor_1.add(obj)\n      })\n      url = '/static/1楼桌椅/1楼桌椅GITF.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_1 = new THREE.Group()\n        this.context_1.add(obj)\n      })\n      url = '/static/1楼桌椅/1楼桌椅GITF_1.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_1.add(obj)\n      })\n      url = '/static/1楼桌椅/1楼桌椅GITF_2.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_1.add(obj)\n      })\n      url = '/static/2楼墙体/2楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.floor_2 = new THREE.Group()\n        this.floor_2.add(obj)\n      })\n      url = '/static/2楼桌椅/2楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_2 = new THREE.Group()\n        this.context_2.add(obj)\n      })\n      url = '/static/3楼墙体/3楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.floor_3 = new THREE.Group()\n        this.floor_3.add(obj)\n      })\n      url = '/static/3楼桌椅/3楼桌椅第2次.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_3 = new THREE.Group()\n        this.context_3.add(obj)\n        scene.add(this.context_3)\n      })\n      url = '/static/4楼墙体/4楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.floor_4 = new THREE.Group()\n        this.floor_4.add(obj)\n      })\n      url = '/static/4楼桌椅/4楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_4 = new THREE.Group()\n        this.context_4.add(obj)\n      })\n      url = '/static/5楼墙体/5楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.floor_5 = new THREE.Group()\n        this.floor_5.add(obj)\n      })\n      url = '/static/5楼桌椅/5楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_5 = new THREE.Group()\n        this.context_5.add(obj)\n      })\n      url = '/static/6楼墙体/6楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.floor_6 = new THREE.Group()\n        this.floor_6.add(obj)\n      })\n      url = '/static/6楼桌椅/6楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        this.context_6 = new THREE.Group()\n        this.context_6.add(obj)\n      })\n    }\n  }\n}\n</script>\n\n<style>\n#container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n</style>\n"]}]}